{"ast":null,"code":"(function ($) {\n  \"use strict\";\n\n  $.fn.counterUp = function (options) {\n    var settings = $.extend({\n        time: 400,\n        delay: 10,\n        offset: 100,\n        beginAt: 0,\n        formatter: false,\n        context: \"window\",\n        callback: function () {}\n      }, options),\n      s;\n    return this.each(function () {\n      var $this = $(this),\n        counter = {\n          time: $(this).data(\"counterup-time\") || settings.time,\n          delay: $(this).data(\"counterup-delay\") || settings.delay,\n          offset: $(this).data(\"counterup-offset\") || settings.offset,\n          beginAt: $(this).data(\"counterup-beginat\") || settings.beginAt,\n          context: $(this).data(\"counterup-context\") || settings.context\n        };\n      var counterUpper = function () {\n        var nums = [];\n        var divisions = counter.time / counter.delay;\n        var num = $(this).attr(\"data-num\") ? $(this).attr(\"data-num\") : $this.text();\n        var isComma = /[0-9]+,[0-9]+/.test(num);\n        num = num.replace(/,/g, \"\");\n        var decimalPlaces = (num.split(\".\")[1] || []).length;\n        if (counter.beginAt > num) counter.beginAt = num;\n        var isTime = /[0-9]+:[0-9]+:[0-9]+/.test(num);\n        if (isTime) {\n          var times = num.split(\":\"),\n            m = 1;\n          s = 0;\n          while (times.length > 0) {\n            s += m * parseInt(times.pop(), 10);\n            m *= 60;\n          }\n        }\n        for (var i = divisions; i >= counter.beginAt / num * divisions; i--) {\n          var newNum = parseFloat(num / divisions * i).toFixed(decimalPlaces);\n          if (isTime) {\n            newNum = parseInt(s / divisions * i);\n            var hours = parseInt(newNum / 3600) % 24;\n            var minutes = parseInt(newNum / 60) % 60;\n            var seconds = parseInt(newNum % 60, 10);\n            newNum = (hours < 10 ? \"0\" + hours : hours) + \":\" + (minutes < 10 ? \"0\" + minutes : minutes) + \":\" + (seconds < 10 ? \"0\" + seconds : seconds);\n          }\n          if (isComma) {\n            while (/(\\d+)(\\d{3})/.test(newNum.toString())) {\n              newNum = newNum.toString().replace(/(\\d+)(\\d{3})/, \"$1\" + \",\" + \"$2\");\n            }\n          }\n          if (settings.formatter) {\n            newNum = settings.formatter.call(this, newNum);\n          }\n          nums.unshift(newNum);\n        }\n        $this.data(\"counterup-nums\", nums);\n        $this.text(counter.beginAt);\n        var f = function () {\n          if (!$this.data(\"counterup-nums\")) {\n            settings.callback.call(this);\n            return;\n          }\n          $this.html($this.data(\"counterup-nums\").shift());\n          if ($this.data(\"counterup-nums\").length) {\n            setTimeout($this.data(\"counterup-func\"), counter.delay);\n          } else {\n            $this.data(\"counterup-nums\", null);\n            $this.data(\"counterup-func\", null);\n            settings.callback.call(this);\n          }\n        };\n        $this.data(\"counterup-func\", f);\n        setTimeout($this.data(\"counterup-func\"), counter.delay);\n      };\n      $this.waypoint(function (direction) {\n        counterUpper();\n        this.destroy();\n      }, {\n        offset: counter.offset + \"%\",\n        context: counter.context\n      });\n    });\n  };\n})(jQuery);","map":{"version":3,"names":["$","fn","counterUp","options","settings","extend","time","delay","offset","beginAt","formatter","context","callback","s","each","$this","counter","data","counterUpper","nums","divisions","num","attr","text","isComma","test","replace","decimalPlaces","split","length","isTime","times","m","parseInt","pop","i","newNum","parseFloat","toFixed","hours","minutes","seconds","toString","call","unshift","f","html","shift","setTimeout","waypoint","direction","destroy","jQuery"],"sources":["C:/git-hub/devhitesh/src/vendors/counter-up/jquery.counterup.min.js"],"sourcesContent":["(function($){\"use strict\";$.fn.counterUp=function(options){var settings=$.extend({time:400,delay:10,offset:100,beginAt:0,formatter:false,context:\"window\",callback:function(){}},options),s;return this.each(function(){var $this=$(this),counter={time:$(this).data(\"counterup-time\")||settings.time,delay:$(this).data(\"counterup-delay\")||settings.delay,offset:$(this).data(\"counterup-offset\")||settings.offset,beginAt:$(this).data(\"counterup-beginat\")||settings.beginAt,context:$(this).data(\"counterup-context\")||settings.context};var counterUpper=function(){var nums=[];var divisions=counter.time/counter.delay;var num=$(this).attr(\"data-num\")?$(this).attr(\"data-num\"):$this.text();var isComma=/[0-9]+,[0-9]+/.test(num);num=num.replace(/,/g,\"\");var decimalPlaces=(num.split(\".\")[1]||[]).length;if(counter.beginAt>num)counter.beginAt=num;var isTime=/[0-9]+:[0-9]+:[0-9]+/.test(num);if(isTime){var times=num.split(\":\"),m=1;s=0;while(times.length>0){s+=m*parseInt(times.pop(),10);m*=60}}for(var i=divisions;i>=counter.beginAt/num*divisions;i--){var newNum=parseFloat(num/divisions*i).toFixed(decimalPlaces);if(isTime){newNum=parseInt(s/divisions*i);var hours=parseInt(newNum/3600)%24;var minutes=parseInt(newNum/60)%60;var seconds=parseInt(newNum%60,10);newNum=(hours<10?\"0\"+hours:hours)+\":\"+(minutes<10?\"0\"+minutes:minutes)+\":\"+(seconds<10?\"0\"+seconds:seconds)}if(isComma){while(/(\\d+)(\\d{3})/.test(newNum.toString())){newNum=newNum.toString().replace(/(\\d+)(\\d{3})/,\"$1\"+\",\"+\"$2\")}}if(settings.formatter){newNum=settings.formatter.call(this,newNum)}nums.unshift(newNum)}$this.data(\"counterup-nums\",nums);$this.text(counter.beginAt);var f=function(){if(!$this.data(\"counterup-nums\")){settings.callback.call(this);return}$this.html($this.data(\"counterup-nums\").shift());if($this.data(\"counterup-nums\").length){setTimeout($this.data(\"counterup-func\"),counter.delay)}else{$this.data(\"counterup-nums\",null);$this.data(\"counterup-func\",null);settings.callback.call(this)}};$this.data(\"counterup-func\",f);setTimeout($this.data(\"counterup-func\"),counter.delay)};$this.waypoint(function(direction){counterUpper();this.destroy()},{offset:counter.offset+\"%\",context:counter.context})})}})(jQuery);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}